{"version":3,"sources":["components/footer.js","components/layout.js","components/runescape-map.js","routes/tile-show.js"],"names":["Footer","h","id","class","href","Layout","_ref","children","fullWidth","props","style","maxWidth","Object","assign","DEFAULT_VIEW","MainTileLayer","TileLayer","extend","initialize","url","options","this","_url","originalPlane","plane","setOptions","getTileUrl","coords","Util","template","source","mapId","zoom","z","x","y","resetPlane","setPlane","original","getPlane","Math","max","minPlane","min","maxPlane","_map","fire","redraw","createTile","done","tile","prototype","call","onerror","error","preventDefault","fromLatLng","latLng","parseInt","lng","lat","toLatLng","mapTile","regionId","regionX","regionY","jsColor","intColor","num","join","argb","slice","label","color","prepareMap","map","defaultView","setView","mouseRect","rectangle","fillColor","fillOpacity","weight","interactive","addTo","on","e","mousePos","latlng","setBounds","locationControl","Control","position","onAdd","container","DomUtil","create","button","updateButton","region","center","getCenter","rsCenter","rsRegion","regions","includes","name","findCurrentRegion","hidden","textContent","resetButton","DomEvent","disableClickPropagation","addListener","viewport","fitBounds","tileLayer","planeButtons","upButton","downButton","updateButtons","addClass","removeClass","TileMapHandler","tiles","selected","useMap","noWrap","minZoom","maxNativeZoom","maxZoom","errorTileUrl","length","tilesX","t","tilesY","minX","maxX","minY","maxY","bounds","Fragment","ImageOverlay","Rectangle","pathOptions","Tooltip","RuneScapeMap","_ref2","MapContainer","maxBounds","maxBoundsViscosity","attributionControl","whenCreated","crs","CRS","Simple","connect","mapStateToProps","state","b64","decodedData","jsonData","b64string","window","location","hash","substring","atob","JSON","parse","ignored","data","Meta","title","hero","description","NotFound"],"mappings":"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","file":"static/js/1.c7f6ac57.chunk.js","sourcesContent":["import { h } from 'preact'\n\nconst Footer = () => (\n  <section id=\"footer\">\n    <div class=\"content-section\">\n      <footer>\n        <hr />\n        Developed with <i class=\"fas fa-heart\" /> and{' '}\n        <i class=\"fas fa-coffee\" /> using{' '}\n        <a href=\"https://getbootstrap.com/\">Bootstrap</a>,{' '}\n        <a href=\"https://reactjs.org/\">React</a> and{' '}\n        <a href=\"https://fontawesome.com/\">Font Awesome</a>\n        <a href={`/atom.xml`} class=\"float-right\">\n          <i class=\"fas fa-rss\" /> Subscribe via RSS\n        </a>\n      </footer>\n    </div>\n  </section>\n)\n\nexport default Footer\n","import { h } from 'preact'\nimport Footer from './footer'\n\nconst Layout = ({ children, fullWidth, ...props }) => {\n  props.class = props.class ? 'container ' + props.class : 'container'\n  props.style = {\n    ...(props.style || {}),\n    maxWidth: fullWidth ? '100%' : ''\n  }\n\n  return (\n    <div {...props} id=\"layout\">\n      {children}\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n","import { h, Fragment } from 'preact'\nimport {\n  rectangle,\n  setOptions,\n  Control,\n  DomUtil,\n  DomEvent,\n  TileLayer,\n  Util,\n  CRS\n} from 'leaflet'\nimport {\n  MapContainer,\n  Rectangle,\n  Tooltip,\n  ImageOverlay,\n  useMap\n} from 'react-leaflet'\nimport regions from '../_data/regions'\nimport './runescape-map.scss'\n\nconst BOUNDS_TOLERANCE = 4\nconst MIN_ZOOM = -4\nconst MAX_ZOOM = 8\nconst MAX_NATIVE_ZOOM = 2\nconst DEFAULT_ZOOM = 0\nconst DEFAULT_VIEW = [3225, 3219]\nconst MIN_PLANE = 0\nconst MAX_PLANE = 3\n\nconst MainTileLayer = TileLayer.extend({\n  initialize: function (url, options) {\n    this._url = url\n    this.originalPlane = options.plane\n    setOptions(this, options)\n  },\n\n  getTileUrl: function (coords) {\n    return Util.template(this._url, {\n      source: this.options.source,\n      mapId: -1,\n      zoom: coords.z,\n      plane: this.options.plane,\n      x: coords.x,\n      y: -(1 + coords.y)\n    })\n  },\n\n  resetPlane: function () {\n    this.setPlane(this.originalPlane)\n  },\n\n  setPlane: function (plane) {\n    const original = this.getPlane()\n    plane = Math.max(plane, this.options.minPlane)\n    plane = Math.min(plane, this.options.maxPlane)\n\n    if (plane === original) {\n      return\n    }\n\n    this.options.plane = plane\n\n    if (this._map) {\n      this._map.fire('planechange')\n    }\n\n    this.redraw()\n  },\n\n  getPlane: function () {\n    return this.options.plane\n  },\n\n  createTile: function (coords, done) {\n    let tile = TileLayer.prototype.createTile.call(this, coords, done)\n    tile.onerror = error => error.preventDefault()\n    return tile\n  }\n})\n\nconst fromLatLng = latLng => {\n  return {\n    x: parseInt(latLng.lng),\n    y: parseInt(latLng.lat)\n  }\n}\n\nconst toLatLng = (x, y) => {\n  return [y, x]\n}\n\nconst findCurrentRegion = map => {\n  const center = map.getCenter()\n  const rsCenter = fromLatLng(center)\n  const rsRegion = ((rsCenter.x >> 6) << 8) | (rsCenter.y >> 6)\n\n  for (const region of regions) {\n    if (region.regions.includes(rsRegion)) {\n      return region.name\n    }\n  }\n\n  return ''\n}\n\nconst toColor = num => {\n  num >>>= 0\n  const b = num & 0xff,\n    g = (num & 0xff00) >>> 8,\n    r = (num & 0xff0000) >>> 16,\n    a = ((num & 0xff000000) >>> 24) / 255\n  return 'rgba(' + [r, g, b, a].join(',') + ')'\n}\n\nconst mapTile = tile => {\n  const regionId = tile['regionId']\n  const regionX = tile['regionX']\n  const regionY = tile['regionY']\n  let jsColor = '#ffffff'\n\n  if (tile['color']) {\n    const intColor = tile['color']['value']\n\n    if (intColor) {\n      jsColor = toColor(intColor)\n    } else if (tile['color']) {\n      const argb = tile['color']\n      jsColor = '#' + argb.slice(3, 9) + argb[1] + argb[2]\n    }\n  }\n\n  const x = ((regionId >>> 8) << 6) + regionX\n  const y = ((regionId & 0xff) << 6) + regionY\n  const z = tile['z']\n\n  return {\n    x,\n    y,\n    z,\n    label: tile['label'],\n    color: jsColor\n  }\n}\n\nconst prepareMap = map => {\n  const defaultView = toLatLng(DEFAULT_VIEW[0], DEFAULT_VIEW[1])\n  map.setView(defaultView)\n\n  const mouseRect = rectangle(\n    [\n      [0, 0],\n      [1, 1]\n    ],\n    {\n      color: '#1e1e1e',\n      fillColor: '#1e1e1e',\n      fillOpacity: 0.3,\n      weight: 1,\n      interactive: false\n    }\n  )\n\n  mouseRect.addTo(map)\n\n  map.on('mousemove', e => {\n    const mousePos = fromLatLng(e.latlng)\n    mouseRect.setBounds([\n      toLatLng(mousePos.x, mousePos.y),\n      toLatLng(mousePos.x + 1, mousePos.y + 1)\n    ])\n  })\n\n  const locationControl = new Control({ position: 'topright' })\n  locationControl.onAdd = map => {\n    const container = DomUtil.create('div', 'leaflet-bar leaflet-control')\n\n    const button = DomUtil.create('span', 'leaflet-custom-control', container)\n    const updateButton = () => {\n      const region = findCurrentRegion(map)\n      button.hidden = !region\n      button.textContent = region\n    }\n\n    updateButton()\n    map.on('move', updateButton)\n    return container\n  }\n\n  locationControl.addTo(map)\n\n  const resetButton = new Control({ position: 'topleft' })\n  resetButton.onAdd = map => {\n    const container = DomUtil.create('div', 'leaflet-bar leaflet-control')\n    const button = DomUtil.create('a', 'fas fa-redo', container)\n\n    DomEvent.disableClickPropagation(button).addListener(\n      button,\n      'click',\n      () => {\n        if (map.viewport) {\n          map.fitBounds(map.viewport)\n        } else {\n          map.setView(defaultView, DEFAULT_ZOOM)\n        }\n\n        map.tileLayer.resetPlane()\n      }\n    )\n\n    return container\n  }\n\n  resetButton.addTo(map)\n\n  const planeButtons = new Control({ position: 'topright' })\n  planeButtons.onAdd = map => {\n    const container = DomUtil.create('div', 'leaflet-bar leaflet-control')\n    const upButton = DomUtil.create('a', 'fas fa-sort-amount-up-alt', container)\n    const label = DomUtil.create('span', 'leaflet-custom-control', container)\n    const downButton = DomUtil.create('a', 'fas fa-sort-amount-down', container)\n\n    const updateButtons = () => {\n      if (!map.tileLayer) {\n        return\n      }\n\n      label.textContent = map.tileLayer.getPlane()\n\n      if (map.tileLayer.getPlane() === map.tileLayer.options.maxPlane) {\n        DomUtil.addClass(upButton, 'leaflet-disabled')\n      } else {\n        DomUtil.removeClass(upButton, 'leaflet-disabled')\n      }\n\n      if (map.tileLayer.getPlane() === map.tileLayer.options.minPlane) {\n        DomUtil.addClass(downButton, 'leaflet-disabled')\n      } else {\n        DomUtil.removeClass(downButton, 'leaflet-disabled')\n      }\n    }\n\n    updateButtons()\n    map.on('planechange', updateButtons)\n\n    DomEvent.disableClickPropagation(upButton).addListener(\n      upButton,\n      'click',\n      () => {\n        map.tileLayer.setPlane(map.tileLayer.getPlane() + 1)\n      }\n    )\n\n    DomEvent.disableClickPropagation(downButton).addListener(\n      downButton,\n      'click',\n      () => {\n        map.tileLayer.setPlane(map.tileLayer.getPlane() - 1)\n      }\n    )\n\n    return container\n  }\n\n  planeButtons.addTo(map)\n\n  if (map.viewport) {\n    map.fitBounds(map.viewport)\n  }\n}\n\nconst TileMapHandler = ({ tiles, selected, plane }) => {\n  const map = useMap()\n\n  if (!map.tileLayer) {\n    map.tileLayer = new MainTileLayer(\n      'https://raw.githubusercontent.com/mejrs/layers_osrs/master/{source}/-1/{zoom}/{plane}_{x}_{y}.png',\n      {\n        noWrap: true,\n        plane: plane,\n        minPlane: MIN_PLANE,\n        maxPlane: MAX_PLANE,\n        source: 'mapsquares',\n        minZoom: MIN_ZOOM,\n        maxNativeZoom: MAX_NATIVE_ZOOM,\n        maxZoom: MAX_ZOOM,\n        errorTileUrl:\n          'https://raw.githubusercontent.com/mejrs/mejrs.github.io/master/layers/alpha_pixel.png'\n      }\n    )\n\n    map.tileLayer.addTo(map)\n  }\n\n  map.tileLayer.originalPlane = plane\n  map.tileLayer.setPlane(plane)\n\n  if (selected.length > 0) {\n    const tilesX = selected.map(t => t.x)\n    const tilesY = selected.map(t => t.y)\n    const minX = Math.min(...tilesX) - BOUNDS_TOLERANCE\n    const maxX = Math.max(...tilesX) + BOUNDS_TOLERANCE\n    const minY = Math.min(...tilesY) - BOUNDS_TOLERANCE\n    const maxY = Math.max(...tilesY) + BOUNDS_TOLERANCE\n    const minCorner = toLatLng(minX, minY)\n    const maxCorner = toLatLng(maxX, maxY)\n    const viewport = [minCorner, maxCorner]\n\n    map.viewport = viewport\n    map.fitBounds(viewport)\n  }\n\n  return tiles.map(tile => {\n    const pos = toLatLng(tile.x, tile.y)\n    const pos2 = toLatLng(tile.x + 1, tile.y + 1)\n    const bounds = [pos, pos2]\n    return (\n      <Fragment>\n        {tile.label && (\n          <ImageOverlay bounds={bounds} url={'/img/tile-text.png'} />\n        )}\n        <Rectangle\n          bounds={bounds}\n          pathOptions={{\n            color: tile.color,\n            fillColor: tile.color,\n            fillOpacity: 0.3,\n            weight: 1,\n            interactive: false\n          }}\n        >\n          {tile.label && <Tooltip>{tile.label}</Tooltip>}\n        </Rectangle>\n      </Fragment>\n    )\n  })\n}\n\nconst RuneScapeMap = ({ tiles, selected }) => {\n  if (!tiles) {\n    tiles = []\n  }\n\n  if (!selected) {\n    selected = tiles\n  }\n\n  tiles = tiles.map(mapTile)\n  selected = selected.map(mapTile)\n\n  const plane = selected.length > 0 ? selected[0].z || 0 : 0\n\n  return (\n    <Fragment>\n      <MapContainer\n        minZoom={MIN_ZOOM}\n        maxZoom={MAX_ZOOM}\n        maxBounds={[\n          [-1000, -1000],\n          [12800 + 1000, 12800 + 1000]\n        ]}\n        maxBoundsViscosity={0.5}\n        zoom={DEFAULT_ZOOM}\n        attributionControl={false}\n        whenCreated={prepareMap}\n        crs={CRS.Simple}\n      >\n        <TileMapHandler tiles={tiles} selected={selected} plane={plane} />\n      </MapContainer>\n    </Fragment>\n  )\n}\n\nexport default RuneScapeMap\n","import { h } from 'preact'\nimport Layout from '../components/layout'\nimport hero from '../_data/hero'\nimport Meta from '../components/meta'\nimport { connect } from 'react-redux'\nimport RuneScapeMap from '../components/runescape-map'\nimport './tag.css'\nimport NotFound from '../components/not-found'\n\nconst TileShow = ({ data, tiles }) => {\n  if (!tiles || tiles.length === 0) {\n    return <NotFound />\n  }\n\n  return (\n    <Layout>\n      <Meta title={`Tile markers - ${hero.title}`} description={data} />\n      <section id=\"tiles\">\n        <div class=\"content-section tag-container\">\n          <RuneScapeMap tiles={tiles} />\n          <pre class=\"pre-select\">{data}</pre>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nconst mapStateToProps = (state, { b64 }) => {\n  let decodedData = ''\n  let jsonData = []\n\n  try {\n    const b64string = b64 || window.location.hash.substring(1)\n    decodedData = atob(b64string)\n    jsonData = JSON.parse(decodedData)\n  } catch (ignored) {}\n\n  return {\n    data: decodedData,\n    tiles: jsonData\n  }\n}\n\nexport default connect(mapStateToProps)(TileShow)\n"],"sourceRoot":""}