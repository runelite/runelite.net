{"version":3,"sources":["home.scss","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","blog.scss","feature.scss"],"names":[],"mappings":"AAIA,aACE,wBAAA,CACA,gBAAA,CACA,WAAA,CAGF,eACE,eAAA,CACA,cAAA,CACA,UAAA,CACA,kBAAA,CACA,uBAAA,CAGF,eACE,eAAA,CACA,iBAAA,CAGF,eACE,oBAAA,CACA,aAAA,CAGF,qBACE,UAAA,CAGF,iBACE,eAAA,CAGF,eACE,kBAAA,CAGF,qBAGE,kBAAA,CC8BE,2BD1BF,yEAEE,cAAA,CAAA,CAIJ,wBACE,wBACE,cAAA,CAGF,aACE,SAAA,CACA,qBAAA,CACA,aAAA,CACA,UAAA,CAAA,CAIJ,cACE,+BAAA,CACA,mBAAA,CACA,UAAA,CACA,cAAA,CACA,WAAA,CACA,qBAAA,CACA,cAAA,CAGF,wBACE,oBACE,cAAA,CAEF,cACE,cAAA,CACA,kBAAA,CACA,SAAA,CACA,eAAA,CAAA,CEpFJ,cAIA,eACE,CAAA,wBAEA,WACE,CAAA,aACA,CAAA,eACA,CAAA,oBACA,CAAA,SACA,CAAA,gBACA,CAAA,yBAIJ,aACE,CAAA,iBAGF,iBACE,CAAA,2BDmDE,4BC/CF,cACE,CAAA,CAAA,cAIJ,UACE,CC5BF,MACE,WAAA,CACA,eAAA,CACA,kBAAA,CAGF,wBAEE,SAAA,CACA,eAAA,CACA,wBAAA,CACA,aAAA,CAGF,YACE,UAAA,CACA,wBAAA,CAGF,cACE,aAAA","file":"4.0e1cf7b6.chunk.css","sourcesContent":["@import '~bootstrap/scss/_functions.scss';\n@import '~bootstrap/scss/_variables.scss';\n@import '~bootstrap/scss/mixins/_breakpoints.scss';\n\n#about .info {\n  width: calc(100% - 500px);\n  min-height: 200px;\n  float: right;\n}\n\n#about .info p {\n  margin-top: 20px;\n  font-size: 16px;\n  color: #cccccc;\n  text-align: justify;\n  text-justify: inter-word;\n}\n\n#about .info i {\n  margin-top: 10px;\n  margin-right: 30px;\n}\n\n#about .info a {\n  text-decoration: none;\n  color: inherit;\n}\n\n#about .info a:hover {\n  opacity: 0.3;\n}\n\n.content-section {\n  background: none;\n}\n\n#features-home {\n  background: #141414;\n}\n\n#about,\n#news,\n#footer {\n  background: #232323;\n}\n\n@include media-breakpoint-down(md) {\n  #news .content-section.homepage,\n  #features-home .content-section.homepage {\n    padding: 40px 0;\n  }\n}\n\n@media (max-width: 768px) {\n  #about .content-section {\n    padding: 50px 0;\n  }\n\n  #about .info {\n    width: 90%;\n    margin: 50px auto auto;\n    display: block;\n    float: none;\n  }\n}\n\n.right-header {\n  border-bottom: 1px solid #dc8a00;\n  padding-bottom: 10px;\n  width: auto;\n  font-size: 12px;\n  float: right;\n  vertical-align: bottom;\n  margin-top: 8px;\n}\n\n@media (max-width: 488px) {\n  .content-section h1 {\n    font-size: 18px;\n  }\n  .right-header {\n    font-size: 10px;\n    border-bottom: none;\n    padding: 0;\n    margin-top: 10px;\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","@import '~bootstrap/scss/_functions.scss';\n@import '~bootstrap/scss/_variables.scss';\n@import '~bootstrap/scss/mixins/_breakpoints.scss';\n\n.news-page ul {\n  list-style: none;\n\n  li::before {\n    content: '\\2022';\n    color: #dc8a00;\n    font-weight: bold;\n    display: inline-block;\n    width: 1em;\n    margin-left: -1em;\n  }\n}\n\n.news-page ol li::marker {\n  color: #dc8a00;\n}\n\n.news-page table {\n  margin-bottom: 1em;\n}\n\n@include media-breakpoint-down(md) {\n  #blog-list .content-section {\n    padding: 30px 0;\n  }\n}\n\n#blog-list h5 {\n  color: white;\n}\n","@import '~bootstrap/scss/_functions.scss';\n@import '~bootstrap/scss/_variables.scss';\n@import '~bootstrap/scss/mixins/_breakpoints.scss';\n\n.card {\n  border: none;\n  background: none;\n  margin-bottom: 50px;\n}\n\n.card-header,\n.card-body {\n  padding: 0;\n  margin-top: 20px;\n  font-size: 15px !important;\n  color: #a8a8a8;\n}\n\n.card-title {\n  color: white;\n  font-size: 18px !important;\n}\n\n.card-title a {\n  color: inherit;\n}\n"]}